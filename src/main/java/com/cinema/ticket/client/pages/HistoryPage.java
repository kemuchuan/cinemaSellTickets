/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.cinema.ticket.client.pages;

import com.cinema.ticket.client.api.TicketApi;
import com.cinema.ticket.client.domain.Ticket;
import com.cinema.ticket.client.domain.User;
import com.cinema.ticket.client.utils.page.PageUtils;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Vector;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 * 历史记录的窗口类
 * @author 22805
 */
public class HistoryPage extends javax.swing.JFrame {

    private static final HistoryPage historyPage = new HistoryPage();

    public static HistoryPage getHistoryPage(User user) {
        historyPage.setVisible(false);
        historyPage.user = user;
        historyPage.initHistory();
        return historyPage;
    }

    /**
     * Creates new form HistoryPage
     */
    private HistoryPage() {
        initComponents();
        initTable();
        PageUtils.setJFrameCenterAndNotResizeable(this);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setAlwaysOnTop(true);
        this.setResizable(false);
    }

    // 初始化table方法，不重点
    private void initTable() {
        this.historyTable.getColumnModel().getColumn(4).setCellRenderer(new TableCellRendererButton());
        this.historyTable.getColumnModel().getColumn(4).setCellEditor(new TableCellEditorButton(this.historyTable));
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();//单元格渲染器
        tcr.setHorizontalAlignment(JLabel.CENTER);//居中显示
        historyTable.setDefaultRenderer(Object.class, tcr);//设置渲染器
    }

    // 初始化历史记录方法
    private void initHistory() {
        // 请求数据，拿到历史记录
        this.ticketList = this.ticketApi.selectHistoryTicket(this.user.getUserId());
        // 将数据放到table表内
        DefaultTableModel model = (DefaultTableModel) this.historyTable.getModel();
        model.setRowCount(0);
        for (Ticket ticket : this.ticketList) {
            Vector<Object> vector = new Vector<>();
            vector.add(ticket.getLocX() + 1);
            vector.add(ticket.getLocY() + 1);
            vector.add(ticket.getPrice());
            vector.add(ticket.getState());
            model.addRow(vector);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "排号", "列号", "价格", "状态", "操作"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        historyTable.setMinimumSize(new java.awt.Dimension(100, 0));
        historyTable.setName(""); // NOI18N
        historyTable.setRowHeight(30);
        jScrollPane1.setViewportView(historyTable);

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel1.setText("查看选票历史记录");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(0, 193, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable historyTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    // 用户对象
    private User user;

    // 存放历史记录的集合
    private List<Ticket> ticketList;
    // 请求数据的对象
    private final TicketApi ticketApi = new TicketApi();

    // 这俩类是为了渲染按钮用的，不用管
    private class TableCellRendererButton implements TableCellRenderer {


        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,
                                                       int row, int column) {
            JButton button = new JButton("取 消");
            return button;
        }

    }

    private class TableCellEditorButton extends DefaultCellEditor {

        private JButton btn;

        public TableCellEditorButton(JTable jTable) {
            super(new JTextField());
            //设置点击一次就激活，否则默认好像是点击2次激活。
            this.setClickCountToStart(1);
            btn = new JButton("取 消");
            btn.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    DefaultTableModel model = (DefaultTableModel) historyTable.getModel();
                    int row = historyTable.getSelectedRow();
                    Ticket ticket = ticketList.get(row);
                    ticketList.remove(ticket);
                    ticketApi.cancelChooseTicket(user.getUserId(), ticket.getTicketId());
                    model.removeRow(row);
                }
            });
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            return btn;
        }
    }
}
